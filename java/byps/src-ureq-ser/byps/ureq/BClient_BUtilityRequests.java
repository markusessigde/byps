package byps.ureq;

/*
 * 
 * THIS FILE HAS BEEN GENERATED BY class byps.gen.j.GenClient DO NOT MODIFY.
 */

import byps.*;

public class BClient_BUtilityRequests extends BClient { 

	public static BClient_BUtilityRequests createClient(BTransportFactory transportFactory) {
		return new BClient_BUtilityRequests(transportFactory);
	}
	
	public static BClient_BUtilityRequests createClientR(BTransport transport) {
		return new BClient_BUtilityRequests(transport);
	}
	
	public BClient_BUtilityRequests addRemote(BSkeleton_BUtilityRequests remoteSkeleton) throws BException {
		if (serverR == null) throw new BException(BExceptionC.NO_REVERSE_CONNECTIONS, "No reverse connections.");
		serverR.server.addRemote(174367442, remoteSkeleton);
		return this;
	}
	
	public BUtilityRequestsAsync getBUtilityRequests() {
		return bUtilityRequests;
	}
	
	@Override
	public BRemote getStub(int remoteId) {
		if (remoteId == 174367442) return bUtilityRequests;
		return null;
	}
	
	protected BClient_BUtilityRequests(BTransportFactory transportFactory) {
		super(
			transportFactory.createClientTransport(), 
			transportFactory.createServerR(
				BServer_BUtilityRequests.createServerR(transportFactory.createServerTransport())
			)
		);
		initStubs(transport);
	}
	
	protected BClient_BUtilityRequests(BTransport transport) {
		super(transport, null);
		initStubs(transport);
	}
	
	protected BUtilityRequestsAsync bUtilityRequests;
	
	private void initStubs(BTransport transport) {
		bUtilityRequests = new BStub_BUtilityRequests(transport);
	}
	
}
