package byps.test.api.refs;

/*
 * Serializer for byps.test.api.refs.Node
 * 
 * THIS FILE HAS BEEN GENERATED BY class byps.gen.j.GenSerStructJson DO NOT MODIFY.
 */

import byps.*;

// DEBUG
// isEnum=false
// isFinal=false
// isInline=false
// #members=4

// checkpoint byps.gen.j.GenSerStruct:304
@SuppressWarnings("all")
public class JSerializer_9001 extends JSerializer_Object {
	
	public final static BSerializer instance = new JSerializer_9001();
	
	public JSerializer_9001() {
		super(9001);
	}
	
	public JSerializer_9001(int typeId) {
		super(typeId);
	}
	
	
	@Override
	public void internalWrite(final Object obj1, final BOutputJson bout, final BBufferJson bbuf) throws BException {
		final Node obj = (Node)obj1;		
		bout.writeObj("listOfNodes",obj.listOfNodes, false, byps.test.api.JSerializer_1442786648.instance);
		bout.writeObj("mapOfNodes",obj.mapOfNodes, false, byps.test.api.JSerializer_2011881553.instance);
		bout.writeObj("me",obj.me, false, null);
		bout.writeObj("next",obj.next, false, null);
	}
	
	@Override
	public Object internalRead(final Object obj1, final BInputJson bin) throws BException {
		final Node obj = (Node)(obj1 != null ? obj1 : bin.onObjectCreated(new Node()));
		
		final BJsonObject js = bin.currentObject;
		obj.listOfNodes = (java.util.List<byps.test.api.refs.Node>)bin.readObj("listOfNodes", false, byps.test.api.JSerializer_1442786648.instance);
		obj.mapOfNodes = (java.util.Map<java.lang.String,byps.test.api.refs.Node>)bin.readObj("mapOfNodes", false, byps.test.api.JSerializer_2011881553.instance);
		obj.me = (byps.test.api.refs.Node)bin.readObj("me", false, null);
		obj.next = (byps.test.api.refs.Node)bin.readObj("next", false, null);
		
		return obj;
	}
	
	@Override
	public void prepareForLazyLoading(final Object obj1, final BInput bin, final long version) throws BException {
		final Node obj = (Node)(obj1);		
		bin.prepareForLazyLoading(obj.listOfNodes, byps.test.api.BSerializer_1442786648.instance);
		bin.prepareForLazyLoading(obj.mapOfNodes, byps.test.api.BSerializer_2011881553.instance);
		bin.prepareForLazyLoading(obj.me, null);
		bin.prepareForLazyLoading(obj.next, null);
		
	}
	
}
