package byps.test.api.remote;

/*
 * 
 * THIS FILE HAS BEEN GENERATED BY class byps.gen.j.GenApiClass DO NOT MODIFY.
 */

import byps.*;
import java.io.Serializable;

/**
*/
@SuppressWarnings("all")
public final class BRequest_RemoteConstants_compare_AllTypesC extends BMethodRequest implements Serializable {

	public boolean bool1s;
	public boolean bool2s;
	public char char1s;
	public java.lang.String stringNull;
	public char char2s;
	public short short1s;
	public int int1s;
	public long long1s;
	public float float1s;
	public double double1s;
	public java.lang.String string1s;
	public byps.test.api.cons.AllTypesZ ALL;
	public int[] arrInt;
	public int[][][][] arrInt4;
	public java.lang.String[] arrStrings;
	public java.lang.String[][][][] arrStrings4;
	public byps.test.api.cons.AllTypesZ[][] arrAll;
	
	public final static long serialVersionUID = 1609344203L;
	
	public int getRemoteId() { return 2045242510; }
	
	public void execute(BRemote __byps__remote, BAsyncResult<Object> __byps__asyncResult) throws Throwable {
		try {
			final RemoteConstantsAsync __byps__remoteT = (RemoteConstantsAsync)__byps__remote;			
			BAsyncResultSendMethod<Boolean> __byps__outerResult = new BAsyncResultSendMethod<Boolean>(__byps__asyncResult, new byps.test.api.BResult_1());			
			__byps__remoteT.compare_AllTypesC(bool1s, bool2s, char1s, stringNull, char2s, short1s, int1s, long1s, float1s, double1s, string1s, ALL, arrInt, arrInt4, arrStrings, arrStrings4, arrAll, __byps__outerResult);
		} catch (Throwable e) {
			__byps__asyncResult.setAsyncResult(null, e);
		}
	}	
	
	public String toString() {
		StringBuilder s = new StringBuilder();
		s.append("[RemoteConstants.compare_AllTypesC(");
		s.append(bool1s);
		s.append(",").append(bool2s);
		s.append(",").append(char1s);
		s.append(",").append(stringNull);
		s.append(",").append(char2s);
		s.append(",").append(short1s);
		s.append(",").append(int1s);
		s.append(",").append(long1s);
		s.append(",").append(float1s);
		s.append(",").append(double1s);
		s.append(",").append(string1s);
		s.append(",").append(ALL);
		s.append(",").append(arrInt);
		s.append(",").append(arrInt4);
		s.append(",").append(arrStrings);
		s.append(",").append(arrStrings4);
		s.append(",").append(arrAll);
		s.append(")]");
		return s.toString();
	}
	
}
