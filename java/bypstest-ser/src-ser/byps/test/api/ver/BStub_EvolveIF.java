package byps.test.api.ver;

/*
 * 
 * THIS FILE HAS BEEN GENERATED BY class byps.gen.j.GenRemoteStub DO NOT MODIFY.
 */

import byps.*;

// checkpoint byps.gen.j.GenRemoteStub:112
public class BStub_EvolveIF extends BStub implements EvolveIFAsync, java.io.Serializable {
	
	// checkpoint byps.gen.j.GenRemoteStub:93
	public static final long serialVersionUID = 15377840L;
	protected final BForward_EvolveIF forwardTo;	
	
	@SuppressWarnings("unused") private BStub_EvolveIF() {
		this.forwardTo = new BForward_EvolveIF();
	}
	
	public BStub_EvolveIF(final BTransport transport) {
		super(transport);
		this.forwardTo = new BForward_EvolveIF(transport);
		
	}
	
	// checkpoint byps.gen.j.PrintContext:385
	public void setEvolve(Evolve obj) throws RemoteException{
	  forwardTo.setEvolve(obj);
	}
	// checkpoint byps.gen.j.PrintContext:429
	public void setEvolve(Evolve obj, final BAsyncResult<Object> asyncResult) {
	  forwardTo.setEvolve(obj, asyncResult);
	}
	
	// checkpoint byps.gen.j.PrintContext:385
	public Evolve getEvolve() throws RemoteException{
	  return forwardTo.getEvolve();
	}
	// checkpoint byps.gen.j.PrintContext:429
	public void getEvolve(final BAsyncResult<Evolve> asyncResult) {
	  forwardTo.getEvolve(asyncResult);
	}
	
	// checkpoint byps.gen.j.PrintContext:385
	public void setClient(EvolveIF partner) throws RemoteException{
	  forwardTo.setClient(partner);
	}
	// checkpoint byps.gen.j.PrintContext:429
	public void setClient(EvolveIF partner, final BAsyncResult<Object> asyncResult) {
	  forwardTo.setClient(partner, asyncResult);
	}
	
	// checkpoint byps.gen.j.PrintContext:385
	public EvolveIF getClient() throws RemoteException{
	  return forwardTo.getClient();
	}
	// checkpoint byps.gen.j.PrintContext:429
	public void getClient(final BAsyncResult<EvolveIF> asyncResult) {
	  forwardTo.getClient(asyncResult);
	}
	
	// checkpoint byps.gen.j.PrintContext:385
	public void sendEvolveToClient() throws RemoteException{
	  forwardTo.sendEvolveToClient();
	}
	// checkpoint byps.gen.j.PrintContext:429
	public void sendEvolveToClient(final BAsyncResult<Object> asyncResult) {
	  forwardTo.sendEvolveToClient(asyncResult);
	}
	
	
}
