package com.wilutions.byps.test.api.inherit;

/*
 * 
 * THIS FILE HAS BEEN GENERATED BY class com.wilutions.byps.gen.j.GenRemoteSkeleton DO NOT MODIFY.
 */

import com.wilutions.byps.*;

/**
 * This class provides a skeleton implementation of the interface BioFruitService.
 * Your interface implementation class has to be derived from this skeleton.
 * Either provide an asynchronous or a synchronous function in your subclass.
 * The framework calls only the asynchronous function.
 */
@SuppressWarnings("all")
public class BSkeleton_BioFruitService extends BSkeleton implements BioFruitServiceAsync {
	
	public final static long serialVersionUID = 1881829396L;
	
	// checkpoint com.wilutions.byps.gen.j.PrintContext:357
	public java.lang.String grow() throws RemoteException {
		throw new BException(BExceptionC.UNSUPPORTED_METHOD, "");
	}
	// checkpoint com.wilutions.byps.gen.j.PrintContext:401
	public void grow(final BAsyncResult<String> asyncResult) {
		try {
			java.lang.String ret = grow();
			asyncResult.setAsyncResult(ret, null);
		} catch (Throwable e) {
			asyncResult.setAsyncResult(null, e);
		}
	}
	
	// checkpoint com.wilutions.byps.gen.j.PrintContext:357
	public boolean certify(java.lang.String param) throws RemoteException {
		throw new BException(BExceptionC.UNSUPPORTED_METHOD, "");
	}
	// checkpoint com.wilutions.byps.gen.j.PrintContext:401
	public void certify(java.lang.String param, final BAsyncResult<Boolean> asyncResult) {
		try {
			boolean ret = certify(param);
			asyncResult.setAsyncResult(ret, null);
		} catch (Throwable e) {
			asyncResult.setAsyncResult(null, e);
		}
	}
	
	// checkpoint com.wilutions.byps.gen.j.PrintContext:357
	public java.lang.String squeeze() throws RemoteException {
		throw new BException(BExceptionC.UNSUPPORTED_METHOD, "");
	}
	// checkpoint com.wilutions.byps.gen.j.PrintContext:401
	public void squeeze(final BAsyncResult<String> asyncResult) {
		try {
			java.lang.String ret = squeeze();
			asyncResult.setAsyncResult(ret, null);
		} catch (Throwable e) {
			asyncResult.setAsyncResult(null, e);
		}
	}
	
	
}
